name: WASM Build and Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  # Manually triggered workflows for redeployment
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
    # Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Install the Emscripten SDK
    - name: Install Emscripten SDK
      run: |
        git clone https://github.com/emscripten-core/emsdk.git
        cd emsdk
        ./emsdk install latest
        ./emsdk activate latest
        source ./emsdk_env.sh
        cd ..

    # Build project with Emscripten
    - name: Build with Emscripten
      run: |
        source emsdk/emsdk_env.sh
        emcmake cmake .
        emmake make

    # Capture the build files that will be used for deployment (e.g., .html, .js, .wasm)
    - name: Prepare deployment folder
      run: |
        mkdir -p deploy
        cp *.js deploy/
        cp *.wasm deploy/
        if [ -f index.html ]; then cp index.html deploy/; fi

    # Upload build artifacts (optionally for checkout and debugging)
    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: deploy
        path: deploy

  deploy:
    needs: build         # Depends on the build job finishing successfully
    runs-on: ubuntu-latest
    permissions:
      contents: write     # Access to the repository's `gh-pages` branch
      pages: write        # Permission to update GitHub Pages
      id-token: write     # Grants access to OIDC token for deployment creds

    steps:
    # Checkout the branch and deploy files
    - name: Checkout code
      uses: actions/checkout@v3

    # Deploy to GitHub Pages
    - name: Deploy to GitHub Pages
      uses: actions/deploy-pages@v2
      with:
        # The directory that contains pre-made web content (from the "build" job)
        folder: deploy
